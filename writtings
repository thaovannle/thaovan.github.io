summary has to include:
- how will i continue to learn comp sci/comp programming ( with this )?
- how this one helps/being significant? what makes it dif from other? 
- what did i learn? 
- what do i like?
- any difficulties


Codecademy
Github: Birthday party project https://www.codecademy.com/courses/learn-git/projects/birthday-party 

- This module helps me by being a basic kickstart to learning how to use git and git hub to help with 
understanding the concept of version control, switching between master to branches, committing updates.
Working wiht Git Hub maximizes creativity, allows everyone to collaborate anywhere at anytime, thus enhance the accessibility of working in a team .
Not just this project that i chose, the whole course of learning git and github helps me so much in realising there are ways to help my experience of team working much more easier with logical way of organization. 
this helps me with my further education, since im choosing computer science as my future career 
This module helps me practising using git branching, create, delete, merge, switching in betweens. 
It is a simple practice to demonstrate how convenience it is to branch out from your main project and making branches on your own. You also be able to supervise your contents in the most quick and easy way in a few typing. 
- what do i like: how practical this is, and when it is loading, it is quite fun to watch (it is random but it looks like those movies with loading computer screens, and they hack the system within a minute. it is smart)

Anyways, getting back on this blog.

In conclusion, the module gets me  to be familiar with this working style, prepares me for my future career.


Front end: authorization form https://www.codecademy.com/paths/build-web-apps-with-react/tracks/bwa-intro-to-react/modules/react-101-react-components-u/projects/authorization-form 
- The course introduces me to new library, React, an extension for JavaScript. according to codecademy, React is fast, modular and flexible. instead of writing a large file of code, we could divide them to smaller files. also, it is popular, facebook uses it, as well as many other website developers. 
- The module is like a summary of what i have learned through this "intro to JSX" course. i learned how to write JSX elements, and put them together, render them, meaning outputting them on screen. to me this is a fun and fascinating new lesson, i got to extend my knowledge of JavaScript. when working on this course, Introduction to JSX was so far my favourite. It is somehow clicked with how my brain works. Overall, working with Front-End app was a fun but challenging journey, because i was introduced to JS, which i did not know before. It makes me to get interested to Object Oriented Programming. 


Back end: SQL (lyft trip data): https://www.codecademy.com/paths/create-a-back-end-app-with-javascript/tracks/intro-sql-back-end-development/modules/webdev-sql-multiple-tables/projects/multiple-tables-project 
- constrating with Front end, which users can see the physical appearance of the app and being able to interfacing with it, the Back end is important as well, as it is data collecting tools. i pick this project from the SQL section because it is my favourite lesson in the Back end App course. SQL stands for Structurerd Query Language, it is for managing and storing data. from this module and the SQL lesson in general, i learned varities of commands, which are used for creating, editing and altering date tables. tables are my best choice of date collecting and recording form, so this is like, working with excels but by using commands. it helps me in practising this skill of being exact and correctly selecting datas, which is beneficial for my future career that requires me to minimize silly mistakes.  

Khan academy
Natural stimulation (paint splatter): https://www.khanacademy.org/computer-programming/spin-off-of-project-paint-splatter/5136486714621952 
(about natural stimulation course in general)
- the course has been challenging but i have learned alot from it. it shows randomness could be used in a lot of things, in particularly this course we mainly use randomness to draw. in nature, things are random, hence the name, but everything has a limit to it. Like how some types of plants only grow in this specific soil/land, like how our hair knows where to stop growing and not overgrown to our ears. So we learn about gaussian random, map, to create a pattern for randomness. 

- for this project, i used gaussian random to splash the paint, so most of the paint is at the middle of canvas. to make this prettier, i make random color to the paint,so each time a paint dot is placed it is a different color, making the canvas very colorful. throughout this module, i have a chance to practice coding using Gaussian random. 


//Natural stimulation (wall ball): https://www.khanacademy.org/computer-programming/spin-off-of-challenge-wall-balls/4733789171662848 (the extra)
 

Oscillation: Many waves: https://www.khanacademy.org/computer-programming/spin-off-of-challenge-many-waves/5070517761785856 

this modules is a mix between maths and computer science, and bit of physics. this challenge in particular, im making waves with different wavelength and speed and amplitude, applied with trigonometry. the wave taking in starting angle, amplitute, period and angle velocity to draw the waves. the new things i learned here is how to make the wave smoothly moves like sin functions. the y variable of the wave is equal the amplitude multiply by sin(angle)-the angle is starting angle, and constantly adding the angle velocity. im surprised, and kinda amazed by how in js, theres sin function, showing that trigonometry we learn in maths class, could be applied to somewhere else and not just on test papers, and obviously applied to many things more. this challenge, and the module exemplify that maths and computer science are corelated to each other in almost all aspects. if i want to be a computer engeer, this would help me started with some basic concepts.


Algorithm (recursive art): https://www.khanacademy.org/computer-programming/spin-off-of-project-recursive-art/5640824306319360
resursive is an important concept of computer science. since ive only starting to take computer science in grade 11, and i started to hear about recursion. it seems like a confusing concept, but khan academy did a better job of explaining. i think the challenges or project i have chosen for each module have an algorithm: it has to be colourful. this module in my opinion have great color scheme. For every time you refreshes the webpage, new colors, shapes, size, formatting are different. it has this snippet of code that is quite similar to the one i use for my live coding challenge. that is random(1) but less than a specific number, based on the random generator, the probability of drawing the shapes/create colors. the picture created on the canvas is like abstract modern artwork. this project and this module helps me to have a better understanding in algorithm, which is what maths and computers science mostly based on, cubing as well. if you follow this sets of instruction, steps, you will never go wrong. as i mention cubing just now, cubing helps me a big part in understanding how algorithm helps. experience with cubing is this course was great, i look smarter tad bit since i can solve these type of puzzle in the first time in my life. 
in conclusion, this modules did a well job in explaining how algorithmm works, also bringing out my preference in coding and working style, that i like visual things.


Html/DOM (cat walk): https://www.khanacademy.org/computer-programming/spin-off-of-challenge-catwalk/5703850619355136 

DOM(document object model) is a useful thing to learn when i learn about js and html. it is sort of like a mix in between. as i do my live coding challenge, i wish i went over this lesson here earlier so i could be able to fix my little error in the p5.js game, where it is a html file inside of js. this challenge objective is to practice animation using DOM. timing/time is important because it determines how the animation would look like, smaller the time interval, the executed action gives a smoother effect. if i have more time, i would like to go over this lesson to learn more syntax and understand DOM. as i learn more bout HTML, it is getitng more interesting. so if DOM makes my coding practices easier ( in sense of functioning better, may not be easier to me ), i would love to extend further. i have covered a bit of these in codecademy, React, but i think im not as familiar with this yet. i think having a basic knowledge and sense of DOM would be crucial for me in my future studying in college. 

hackathon: https://team-hacakthon-react.glitch.me/games 

the Hackathon is one of the teamwork project i did with other members in class. the projective is to relate computer science and technology, brainstorming and propose ways
the objective is to brainstorm and propose ways how computer science and technology could be used to attribute to sustainabilty goal: our chosen one is Quality of Education. making education accessible and increasing its quality, having basic knowledge to modern technology is one of goal the world is trying to reach, but in order to achieve that, gathering everyone's attention and awareness about the problem we are facing with education right now, and the advocate the importance of education is first on the to-do list. for this project, our team makes a website that have many ways you could access to know more factual statements regarding to quality of education. there will be games that each of us coded to contribute in spreading awareness and engage with the topic. 

for my part, i used replit to create a math game. it is a simple math game, coded using my knowledge of C++ in grade 11, functions, for loops, if/else. there will be a few questions, have some grade 12 maths elements for you to annswer, and if you got the answer correctly, a fact having the statistic equals to the result outputs on screen. the fact is researched and chosen relate to the topic. other member uses replit and p5.js to contribute to this game making. our presentation went really well, we have had good experience of working as a team together. our time management was good, the plan followed like how we wanted. at this time i did not learn how to use p5.js yet. but now if i have a chance to work on this again, i would make a game using p5.js. and at the time i did not also know much about html, so i did not contribute much to it. 

the project helps me develop soft skills, team work, time management, etc. but most importantly, it shows my learning process throughout the semester. i think i learned most new elements during this course, i went from knowing nothing to knowing something in span of 1-2 months. 

live coding challenge: https://editor.p5js.org/thaovannle/sketches/z6nIB0VGa

another big and important project in this course. this assignment is to discover and learn new elements/concepts, practising and utilizing prior knowledge of computer science coding languages. but most importantly is to exercise your creative brain to refractor the original code to your own updated version. most of factors in this project i have already discussed during the presentation, so i shall talk about my process. first is the brainstorming process. i initially sketched a plan of what i could make the game my own version. despite having so many good ideas, my limited coding skill didnt allow me to accomplish my goals. and this is also my first time ever working with p5.js. although this game is beginner friendly, but i still find myself not there even at beginner level, so i tried my very best to learn. i watched the tutorial video over and over again to code, write comments and take notes in the code to make sure i know what its function is. and onto the creative part, i have a lot of issues of choosing what to do. so i decided to take a p5.js codecademy course so i could look at what i could do using p5.js. it really does work, because codecademy is best at explaining and giving useful practices and challenges. ive been able to learn some basics code, i know it is still not much to make more of a complex game, but im still learning and have room to explore, and it is better to have something then nothing. 
i have a lot of issues while working on this, but i have figured out ways to solve it after researches, also watching the video again. but github has been so convienience and beneficial for me on this journey. i once attemped to make edits, but it unfortunately did not work out because i deleted something. but git hub saved me because i have already uploaded the code there. so i could return back to the version and continue to work on it.
overall, this was a good experience. the biggest barrier of this coding challenge is, everything is new: new tools, new code, new language. but i have overcome this perfectly, and gain lots more materials and skills on the long run. this one so far is my most favourite piece of code that i have ever code. i cant wait to learn more on p5.js so that i could just make silly games on my free time, what if i got popular, like pacman.


learn html course(fashion blog): https://www.codecademy.com/courses/learn-html/projects/html-fashion-blog 

due to having a website is a requirement for this portfolio, and since i have never make an html website before, this is a challenge to get started. so i started this brief course of learning html for literal beginner in codecademy, it helps me so much. it is a short course, but the material is enough for me to start a basic simple website on my own. i really recommend this for anyone who is like me right now, codecademy did an awesome in teaching. 
back to this module. this module lets me to practice using the materials to build a simple writen blog, following the structures and building blocks of an html website. to be honest, i was first introduced to html in grade 7, back in Vietnam. i did not get a word of that, and years went by i did not recall any of it. but after learning this module, i start to like html again, it is really fun, full of creativity. i would like to finish the course, and extend my html skill, because having html skill would be very beneficial for my future career. and also, i still have that goal of changing the ocdsb vle website. to me, it is a bad design. not practical, sometimes glitch, not user interactive and looks very scholar. there are many students have complained about this, but it just never changes. with this goal in mind, it kinda motivates me to continue to learn computer science.

khan academy: light saber challenge (vector)
initially this module is supposed to be a learn p5.js module on codecademy, because i have learned materials in here to apply to the live coding challenge. and those lessons meant a lot to me so i wanted to put it here, but codecademy just shut my course and told me to pay to unlock it, so i cant go to practice, neither do i have the ability to get the project link here. 
so that is the story how i chose this module in khan academy here, because im learning the similar thing in the p5.js course, key pressed, other functions you could use keyboard for user-application interaction. so here goes this vector modules.

this modules is packed physics, maths and computer science concepts, how to apply physics to computer science. as someone who does not have good impression with physics, this module was quite overwhelming at first. but it gave me a good refreshing physics review.
in this module, i got introduced to new things, PVector, taking vector in one line of code, rather many lines for x and y position for the displacement.
this challenge using key pressed to extend/shorten the light saber in the canvas. if the up arrow is pressed, the vector is multiplied by 2. if down arrow is pressed, the vector is divided by 2, using the math function notation used on vectors. 

for me to give this whole module of vector, it is tough. but it helps me to reinteract with physics materials, it is like a reminder for me that " you have physics next semester van ". thanks




